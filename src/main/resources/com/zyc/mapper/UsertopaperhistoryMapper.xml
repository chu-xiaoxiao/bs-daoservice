<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyc.mapper.UsertopaperhistoryMapper">
  <resultMap id="BaseResultMap" type="com.zyc.model.Usertopaperhistory">
    <constructor>
      <idArg column="UserToPaperid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="UserId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PaperId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Value" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="startdate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="enddate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserToPaperid, UserId, PaperId, Value, startdate, enddate
  </sql>
  <select id="selectByExample" parameterType="com.zyc.model.Example.UsertopaperhistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from UserToPaperHistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zyc.model.Example.UsertopaperhistoryExample">
    delete from UserToPaperHistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.zyc.model.Usertopaperhistory">
    insert into UserToPaperHistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usertopaperid != null">
        UserToPaperid,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="paperid != null">
        PaperId,
      </if>
      <if test="value != null">
        Value,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usertopaperid != null">
        #{usertopaperid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="paperid != null">
        #{paperid,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyc.model.Example.UsertopaperhistoryExample" resultType="java.lang.Long">
    select count(*) from UserToPaperHistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update UserToPaperHistory
    <set>
      <if test="record.usertopaperid != null">
        UserToPaperid = #{record.usertopaperid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.paperid != null">
        PaperId = #{record.paperid,jdbcType=INTEGER},
      </if>
      <if test="record.value != null">
        Value = #{record.value,jdbcType=DOUBLE},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enddate != null">
        enddate = #{record.enddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update UserToPaperHistory
    set UserToPaperid = #{record.usertopaperid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      PaperId = #{record.paperid,jdbcType=INTEGER},
      Value = #{record.value,jdbcType=DOUBLE},
      startdate = #{record.startdate,jdbcType=TIMESTAMP},
      enddate = #{record.enddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyc.model.Usertopaperhistory">
    update UserToPaperHistory
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="paperid != null">
        PaperId = #{paperid,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        Value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where UserToPaperid = #{usertopaperid,jdbcType=INTEGER}
  </update>
</mapper>