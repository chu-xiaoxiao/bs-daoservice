<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyc.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.zyc.model.Question">
    <constructor>
      <idArg column="questionid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="questiontype" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="subjectid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="startdate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="enddate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    questionid, questiontype, subjectid, startdate, enddate
  </sql>
  <select id="selectByExample" parameterType="com.zyc.model.Example.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zyc.model.Example.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.zyc.model.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionid != null">
        questionid,
      </if>
      <if test="questiontype != null">
        questiontype,
      </if>
      <if test="subjectid != null">
        subjectid,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionid != null">
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="questiontype != null">
        #{questiontype,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null">
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyc.model.Example.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.questionid != null">
        questionid = #{record.questionid,jdbcType=INTEGER},
      </if>
      <if test="record.questiontype != null">
        questiontype = #{record.questiontype,jdbcType=INTEGER},
      </if>
      <if test="record.subjectid != null">
        subjectid = #{record.subjectid,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enddate != null">
        enddate = #{record.enddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set questionid = #{record.questionid,jdbcType=INTEGER},
      questiontype = #{record.questiontype,jdbcType=INTEGER},
      subjectid = #{record.subjectid,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=TIMESTAMP},
      enddate = #{record.enddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyc.model.Question">
    update question
    <set>
      <if test="questiontype != null">
        questiontype = #{questiontype,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null">
        subjectid = #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where questionid = #{questionid,jdbcType=INTEGER}
  </update>
  <select id="selectQuestionRandom" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
        question AS q1
    JOIN (
        SELECT
            ROUND(
                RAND() * (SELECT MAX(questionid) FROM question where questiontype = #{questionType,jdbcType=INTEGER})
            ) AS id
    ) AS q2
    WHERE
        q1.questionid >= q2.id
      and questiontype = #{questionType,jdbcType=INTEGER}
    limit #{size,jdbcType=INTEGER}
  </select>
</mapper>